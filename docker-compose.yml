version: "3.3"
   
services:
  db:
    image: postgres
    container_name: blogs_manager_db
    environment:
      - POSTGRES_DB=blogs_manager
      - POSTGRES_USER=adam
      - POSTGRES_PASSWORD=adam
    volumes:
      - pgdata:/var/lib/postgresql/data/
  redis:
    image: "redis:alpine"
    container_name: blogs_manager_redis
  web:
    container_name: blogs_manager_web
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    command: sh -c "cd ./backend/blogs_manager && 
                    python manage.py migrate &&
                    python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

      
  celery-worker:
    container_name: blogs_manager_celery_worker
    build: ./backend
    command: sh -c "cd ./backend/blogs_manager && 
                    celery -A blogs_manager worker -l info"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
  celery-beat:
    container_name: blogs_manager_celery_beat
    build: ./backend
    command: sh -c "cd ./backend/blogs_manager && 
                    rm -rf celerybeat.pid &&
                    celery -A blogs_manager beat -l info"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

  nginx:
    container_name: blogs_manager_nginx
    build:
        context: ./frontend
        dockerfile: ./Dockerfile
    ports:
        - 80:80
        - 3000:3000
    volumes:
        - ./nginx:/etc/nginx/conf.d   

volumes:
  pgdata: